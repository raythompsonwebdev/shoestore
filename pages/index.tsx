import React, { useState } from 'react'
import Head from 'next/head'
import type { InferGetStaticPropsType, GetStaticProps } from 'next'
import Layout from '../components/Layout'
import BannerImg from '../components/homepage/bannerImg'
import HomePageBoxes from '../components/homepage/homepageBoxes'
import AccordianMenu from '../components/accordianMenu'
import FindShoes from '../components/homepage/FindShoes'
import 'bootstrap/dist/css/bootstrap.min.css'

type HomePageProds = {
  product: []
  accordian: []
}

export default function Home(props: InferGetStaticPropsType<typeof getStaticProps> ) {

  const {product, accordian} = props.products;

  const [visibility, setVisibility] = useState<boolean>(false)

  const sidebarVisibility = (e: { preventDefault: () => void }) => {
    e.preventDefault()
    setVisibility(!visibility)
  }

  return (
    <Layout>
      <>
        <Head>
          <title>Home</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main id="main-content" className="clearfix">
          <button
            id="sidebar-toggle-btn"
            type="button"
            onClick={sidebarVisibility}
            aria-label="secondary menu toggle button"
          >
            SIDE
          </button>

          <aside
            className={`left-side-content ${visibility ? 'is-expanded' : ' '}`}
          >
            <FindShoes />
            <AccordianMenu accordianData={accordian} />
          </aside>

          <section id="right-content-section" className="group">
            <BannerImg />

            <h1 id="right-content-section-header">Featured</h1>
            <HomePageBoxes productData={product} />
          </section>
        </main>
      </>
    </Layout>
  )
}

export const getStaticProps: GetStaticProps<{
  products: HomePageProds
}> = async () => {
  // Call an external API endpoint to get posts
  const res = await fetch('http:localhost:3000/api/homepagedata')
  const products = await res.json()
  // By returning { props: { products } }, the Product component
  // will receive `products` as a prop at build time
  return {
    props:  {
      products,
      revalidate: 10,
    }
  }
}


